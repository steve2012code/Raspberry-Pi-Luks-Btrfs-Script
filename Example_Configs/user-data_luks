#cloud-config
resize_rootfs: false
hostname: {{host_name}}
manage_etc_hosts: true
packages:
- avahi-daemon
apt:
  conf: |
    Acquire {
      Check-Date "false";
    };

groups:
 - docker

users:
- name: {{user_name}}
  groups: users,adm,dialout,audio,netdev,video,plugdev,cdrom,games,input,gpio,spi,i2c,render,sudo, docker
  shell: /bin/bash
  lock_passwd: false
  homedir: /home/{{user_name}}_temp

chpasswd:
  expire: false
  users:
  - {name: {{user_name}}, password: {{user_password}}, type: text}

ssh_pwauth: true

timezone: Europe/London
keyboard:
  model: pc105
  layout: "gb"

package_update: true
package_upgrade: true
packages:
 - dropbear-initramfs
 - snapper
 - postgresql
 - docker.io
 - docker-compose

write_files:
- path: /etc/dropbear/initramfs/authorized_keys
  content: |
    {{dropbear_pub_key}}
  owner: 'root:root'
  permissions: '0600'
  defer: true

runcmd:
 - [ sh, -xc, "echo $(date) 'Output check'" ]
 - [ sh, -xc, "sed -i 's|''#force_color_prompt=yes''|''force_color_prompt=yes''|' /home/{{user_name}}_temp/.bashrc" ]
 - [ sh, -xc, "sed -i 's|''HISTSIZE=1000''|''HISTSIZE=10000''|' /home/{{user_name}}_temp/.bashrc" ]
 - [ sh, -xc, "sed -i 's|''HISTFILESIZE=2000''|''HISTFILESIZE=20000''|' /home/{{user_name}}_temp/.bashrc" ]
 - [ sh, -xc, "chown -R {{user_name}}:{{user_name}} /home/{{user_name}}_temp/.cache"]
 - [ sh, -xc, "sed -i 's|''#DROPBEAR_OPTIONS=\"\"''|''DROPBEAR_OPTIONS=\"-j -k -p 2222 -s -c cryptroot-unlock\"''|' /etc/dropbear/initramfs/dropbear.conf" ]
 - [ sh, -xc, "rsync -arv /home/{{user_name}}_temp/ /home/{{user_name}}/ "]
 - [ sh, -xc, "usermod -m -d /home/{{user_name}} {{user_name}}" ]
 - [ sh, -xc, "rm -rf /home/{{user_name}}_temp"]
 - [ sh, -xc, "snapper -c root create-config /" ]
 - [ sh, -xc, "snapper -c root create" ]
 - [ sh, -xc, "snapper -c {{user_name}}_home create-config /home/{{user_name}}" ]
 - [ sh, -xc, "snapper -c {{user_name}}_home create" ]
 - [ sh, -xc, "update-initramfs -u" ]

final_message: |
  cloud-init has finished
  version: $version
  timestamp: $timestamp
  datasource: $datasource
  uptime: $uptime
